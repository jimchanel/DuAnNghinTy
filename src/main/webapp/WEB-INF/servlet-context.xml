<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<sec:global-method-security
		secured-annotations="enabled" />
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="2000000" />

	</beans:bean>
<!-- 	<beans:bean class="org.apache.commons.dbcp.BasicDataSource" -->
<!-- 		id="dataSource"> -->
<!-- 		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
<!-- 		<beans:property name="url" -->
<!-- 			value="jdbc:mysql://localhost:3306/spring_security_demo" /> -->
<!-- 		<beans:property name="username" value="root" /> -->
<!-- 		<beans:property name="password" value="eposi@2011" /> -->
<!-- 	</beans:bean> -->

	<!-- EntityManagerFactory -->
	<beans:bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<beans:property name="persistenceXmlLocation"
			value="classpath:META-INF/persistence.xml" />
		<beans:property name="persistenceUnitName" value="persistenceUnit" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- Transaction Manager -->
	<beans:bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>

	<!-- Convenience subclass of UrlBasedViewResolver that supports TilesView 
		(i.e. Tiles definitions) and custom subclasses of it. -->
	<!-- Don't forget to set the order if you declared other ViewResolvers -->
	<!-- See http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/servlet/view/tiles2/TilesViewResolver.html -->
	<beans:bean id="tilesviewResolver"
		class="org.springframework.web.servlet.view.tiles2.TilesViewResolver"
		p:order="0" />

	<!-- Helper class to configure Tiles 2.x for the Spring Framework -->
	<!-- See http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html -->
	<!-- The actual tiles templates are in the tiles-definitions.xml -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions" value="/WEB-INF/tiles.xml" />
	</beans:bean>

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<context:component-scan base-package="com.huynvb.pr0ject" />
</beans:beans>
